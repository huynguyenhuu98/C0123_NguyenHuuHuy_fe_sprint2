{"ast":null,"code":"var defaultIsMergeableObject = require('is-mergeable-object');\nfunction emptyTarget(val) {\n  return Array.isArray(val) ? [] : {};\n}\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n  return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;\n}\nfunction defaultArrayMerge(target, source, options) {\n  return target.concat(source).map(function (element) {\n    return cloneUnlessOtherwiseSpecified(element, options);\n  });\n}\nfunction mergeObject(target, source, options) {\n  var destination = {};\n  if (options.isMergeableObject(target)) {\n    Object.keys(target).forEach(function (key) {\n      destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n    });\n  }\n  Object.keys(source).forEach(function (key) {\n    if (!options.isMergeableObject(source[key]) || !target[key]) {\n      destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n    } else {\n      destination[key] = deepmerge(target[key], source[key], options);\n    }\n  });\n  return destination;\n}\nfunction deepmerge(target, source, options) {\n  options = options || {};\n  options.arrayMerge = options.arrayMerge || defaultArrayMerge;\n  options.isMergeableObject = options.isMergeableObject || defaultIsMergeableObject;\n  var sourceIsArray = Array.isArray(source);\n  var targetIsArray = Array.isArray(target);\n  var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n  if (!sourceAndTargetTypesMatch) {\n    return cloneUnlessOtherwiseSpecified(source, options);\n  } else if (sourceIsArray) {\n    return options.arrayMerge(target, source, options);\n  } else {\n    return mergeObject(target, source, options);\n  }\n}\ndeepmerge.all = function deepmergeAll(array, options) {\n  if (!Array.isArray(array)) {\n    throw new Error('first argument should be an array');\n  }\n  return array.reduce(function (prev, next) {\n    return deepmerge(prev, next, options);\n  }, {});\n};\nmodule.exports = deepmerge;","map":{"version":3,"names":["defaultIsMergeableObject","require","emptyTarget","val","Array","isArray","cloneUnlessOtherwiseSpecified","value","options","clone","isMergeableObject","deepmerge","defaultArrayMerge","target","source","concat","map","element","mergeObject","destination","Object","keys","forEach","key","arrayMerge","sourceIsArray","targetIsArray","sourceAndTargetTypesMatch","all","deepmergeAll","array","Error","reduce","prev","next","module","exports"],"sources":["/Users/huuhuy1998/CodeGym/fe_sprint2/node_modules/deepmerge/index.js"],"sourcesContent":["var defaultIsMergeableObject = require('is-mergeable-object')\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {}\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options)\n\t\t})\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options)\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options)\n\t\t}\n\t})\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {}\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge\n\toptions.isMergeableObject = options.isMergeableObject || defaultIsMergeableObject\n\n\tvar sourceIsArray = Array.isArray(source)\n\tvar targetIsArray = Array.isArray(target)\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n}\n\nmodule.exports = deepmerge\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}